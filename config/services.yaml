# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    default_locale: 'es'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # config/services.yaml


    # Configuración de los servicios Admin de Sonata

    # CategoryAdmin
    admin.category:
        class: App\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, model_class: 'App\Entity\Category', controller: ~, manager_type: orm, group: 'Contenido', label: 'Categorías' }

    # ProjectAdmin
    admin.project:
        class: App\Admin\ProjectAdmin
        tags:
            - { name: sonata.admin, model_class: 'App\Entity\Project', controller: ~, manager_type: orm, group: 'Contenido', label: 'Proyectos' }

    # ProjectImageAdmin
    admin.projectImage:
        class: App\Admin\Image\ProjectImageAdmin
        tags:
            - { name: sonata.admin, model_class: 'App\Entity\Image\ProjectImage', controller: ~, manager_type: orm, group: 'Contenido', label: 'Imagenes', show_in_dashboard: false }

    # WorkshopAdmin
    admin.workshop:
        class: App\Admin\WorkshopAdmin
        tags:
            - { name: sonata.admin, model_class: 'App\Entity\Workshop', controller: ~, manager_type: orm, group: 'Contenido', label: 'Talleres' }

    # WorkshopImageAdmin
    admin.workshopImage:
        class: App\Admin\Image\WorkshopImageAdmin
        tags:
            - { name: sonata.admin, model_class: 'App\Entity\Image\WorkshopImage', controller: ~, manager_type: orm, group: 'Contenido', label: 'Imagenes', show_in_dashboard: false }
